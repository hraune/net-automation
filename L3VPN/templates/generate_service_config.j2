{%- for node in nodes if node.name == inventory_hostname %}
{% set existing = [] %}
{% if active_vrfs[inventory_hostname|string] is defined %}
{##}{% for vrf in active_vrfs[inventory_hostname|string] %}
{##}{##}{% do existing.append(vrf.name) %}
{##}{##}{% if vrf.surprise == True %}
!! {{ vrf.name }} is unknown and should be removed
no ip vrf {{ vrf.name }}
!
{##}{##}{% endif %}
{##}{% endfor %}
{% endif %}
{% set absent = [] %}
{% if node.vpn is defined %}
{##}{% for vpn in node.vpn %}
{##}{##}{% if vpn.state == 'absent' %}
{##}{##}{##}{% do absent.append(vpn.name) %}
no ip vrf {{ vpn.name }}
!
{##}{##}{% elif vpn.name in existing%}
!! A VPN by name of {{ vpn.name }} is already configured, skipping
{##}{##}{% else %}
ip vrf {{ vpn.name }}
 rd {{ vpn.rd }}
 route-target export {{ vpn.rd }}
 route-target import {{ vpn.rd }}
!
{##}{##}{% endif %}
{##}{% endfor %}
{% endif %}
{% for interface in node.interfaces if interface.vrf is defined %}
{% if interface.vrf not in existing %}
interface {{ interface.name }}
{% endif %}
{% if interface.vrf in absent %}
 ip address {{ interface.ip|ipaddr('address') }} {{ interface.ip|ipaddr('netmask') }}
{% elif interface.vrf not in existing %}
 ip vrf forwarding {{ interface.vrf }}
 ip address {{ interface.ip|ipaddr('address') }} {{ interface.ip|ipaddr('netmask') }}
 ip ospf {{ interface.ospf.id }} area {{ interface.ospf.area }}
{% endif %}
!
{% endfor %}
{% if node.vpn is defined %}
{##}{% for vpn in node.vpn if vpn.state != 'absent' and vpn.name not in existing %}
router ospf {{ vpn.ospf.id }} vrf {{ vpn.name }}
 redistribute bgp {{ node.asn }} subnets
!
{##}{% endfor %}
{% endif %}
{% if node.asn is defined and absent|length < node.vpn|length and existing|length < node.vpn|length %}
router bgp {{ node.asn }}
{##}{% for vpn in node.vpn if vpn.state != 'absent' and vpn.name not in existing %}
 address-family ipv4 vrf {{ vpn.name }}
  redistribute ospf {{ vpn.ospf.id }}
 exit-address-family
 !
{##}{% endfor %}
{% endif %}
{% endfor %}