---
- name: Deploy config
  hosts: all
  connection: local
  gather_facts: no
  vars:
  - config_path: configs
  - output_path: reports
  - template_path: templates
  - textfsm_show_vrf: '../../ntc-templates/templates/cisco_ios_show_vrf.template'

  tasks:
  - name: Deploy init config
    ios_config:
      src: "{{ config_path }}/{{ inventory_hostname }}/basic.cfg"
    tags: deploy_init
    register: changes

  - name: Deploy network config
    ios_config:
      src: "{{ config_path }}/{{ inventory_hostname }}/running.cfg"
    tags: deploy_network
    register: changes

  - name: Deploy network config with napalm
    napalm_install_config:
      provider: '{{ ios_provider }}'
      config_file: '{{ config_path }}/{{ inventory_hostname }}/running.cfg'
      commit_changes: True
      replace_config: True
      get_diffs: True
      diff_file: '{{ config_path}}/{{ inventory_hostname }}/running.diff'
    tags: deploy_network_napalm

  - name: Get existing VRF
    ios_command:
      commands:
        - show ip vrf
    register: vrf
    tags: vrf_report

  - name: Extract ospf neighbor data with textfsm
    set_fact: 
      active_vrf: "{{ vrf.stdout[0] | parse_cli_textfsm(textfsm_show_vrf) }}"
    tags: vrf_report

  - debug: var=vars.vrf
    tags: vrf_report

  - name: Create output directory
    file:
      path: "{{ output_path }}"
      state: directory
    run_once: true
    tags: vrf_report
    
  - name: Clean up vrf reports
    file:
      path: "{{ output_path }}/vrf_report.txt"
      state: absent
    run_once: true
    tags: vrf_report

  - name: Create VRF report
    template:
      src: "{{ template_path }}/generate_vrf_report.j2"
      dest: "{{ output_path }}/vrf_report.txt"
    run_once: true
    tags: vrf_report

  - name: Find service config file size
    stat:
      path: '{{ config_path }}/{{ inventory_hostname }}/service.cfg'
    register: service
    tags: deploy_service

  - name: Deploy service config with napalm
    napalm_install_config:
      provider: '{{ ios_provider }}'
      config_file: '{{ config_path }}/{{ inventory_hostname }}/service.cfg'
      commit_changes: True
      replace_config: False
      get_diffs: True
      diff_file: '{{ config_path}}/{{ inventory_hostname }}/service.diff'
      when: service.stat.size > 0
    tags: deploy_service

  - name: get validate report
    napalm_validate:
      provider: "{{ ios_provider }}"
      validation_file: "{{ config_path }}/{{ inventory_hostname }}/validate.yml"
    register: report
    tags: validate

  - debug: var=vars.report
    tags: validate