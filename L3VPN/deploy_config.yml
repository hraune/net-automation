---
- name: Deploy config
  hosts: all
  connection: local
  gather_facts: no
  vars:
  - config_path: configs

  tasks:
  - name: Deploy init config
    ios_config:
      #provider: "{{ ios_provider }}"
      src: "{{ config_path }}/{{ inventory_hostname }}/basic.cfg"
    tags: deploy_init
    register: changes

  - name: Deploy init config with napalm
    napalm_install_config:
      provider: '{{ ios_provider }}'
      config_file: '{{ config_path }}/{{ inventory_hostname }}/basic.cfg'
      commit_changes: True
      replace_config: False
      get_diffs: True
      diff_file: '{{ config_path}}/{{ inventory_hostname }}/basic.diff'
    tags: deploy_init_napalm

  - name: Deploy network config
    ios_config:
      #provider: "{{ ios_provider }}"
      src: "{{ config_path }}/{{ inventory_hostname }}/running.cfg"
    tags: deploy_network
    register: changes

  - name: Deploy network config with napalm
    napalm_install_config:
      provider: '{{ ios_provider }}'
      config_file: '{{ config_path }}/{{ inventory_hostname }}/running.cfg'
      commit_changes: True
      replace_config: True
      get_diffs: True
      diff_file: '{{ config_path}}/{{ inventory_hostname }}/running.diff'
    tags: deploy_network_napalm

  - name: Find service config file size
    stat:
      path: '{{ config_path }}/{{ inventory_hostname }}/service.cfg'
    register: result

  - name: Deploy service config with napalm
    napalm_install_config:
      provider: '{{ ios_provider }}'
      config_file: '{{ config_path }}/{{ inventory_hostname }}/service.cfg'
      commit_changes: True
      replace_config: False
      get_diffs: True
      diff_file: '{{ config_path}}/{{ inventory_hostname }}/service.diff'
      when: result.stat.size > 0
    tags: deploy_service

  - name: Get facts with napalm
    napalm_get_facts: 
      provider: "{{ ios_provider }}"
      filter: 
        - 'bgp_neighbors'
        - 'bgp_neighbors_detail'
    register: bgp_result
    tags: validate

  - debug: var=vars.bgp_result
    tags: validate

  - name: get validate report
    napalm_validate:
      provider: "{{ ios_provider }}"
      validation_file: "{{ config_path }}/{{ inventory_hostname }}/validate.yml"
    register: report
    tags: validate

  - debug: var=vars.report
    tags: validate