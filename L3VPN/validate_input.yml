# Validates all the inputs in the various vars files that everything is based on.
---
- hosts: localhost
  gather_facts: no
  vars:
    - template_path: templates
    - report_path: reports

  tasks:
    - name: Create report directory
      local_action:
        module: file
        path: "{{ report_path }}"
        state: directory

    - name: Validate that all vars are properly defined and not empty
      assert:
        that:
          - services|length > 0
          - isp_nodes|length > 1
          - fabric_infrastructure|length > 0 and fabric_infrastructure|fabric_is_fully_defined(hardware)
          - fabric_customer|length > 0 and fabric_customer|fabric_is_fully_defined(hardware)
          - mpbgp|length > 0 and mpbgp|bgp_is_fully_defined()
          - hardware|length > 0 and hardware|hardware_is_fully_defined()
          - nodes|nodes_is_fully_defined()

    - name: Validate that all nodes are connected via fabric
      assert:
        that:
          # Uses a custom filter that extracts all node names from the fabric and subtracts
          # those node names from the nodes list. If this list is empty, all nodes have
          # been used in the fabric.
          - nodes|nodes_not_in_fabric(fabric_infrastructure, fabric_customer)|length == 0

    - name: Validate that each interface is only used once
      assert:
        that:
          # Uses custom filters to first convert the fabric dictionaries into tuples, and then
          # using set operations to create a list of only unique tuples. Compares the length of 
          # the new list with the length of the original list of fabric dictionaries
          - (fabric_infrastructure + fabric_customer)|fabric_dict_to_tuples|unique_list|length == (fabric_infrastructure + fabric_customer)|length*2

    - name: Validate that there is enough linknets for the fabric
      assert:
        that:
          # Compares the length of the list of fabric dictionaries with the list of computed
          # linknets.
          - (fabric_infrastructure|length + fabric_customer|length) == linknet.fabric_linknets|length

    - name: Validate that the hardware is defined for all devices
      assert:
        that:
          # Merges all the device lists from the hardware dicts and subtracts the list of all the node names;
          # the result should be zero if there is hardware defined for all nodes
          - hardware|merge_lists_from_list_of_dict('devices')|length > 0
          - hardware|merge_lists_from_list_of_dict('devices')|subtract_list(nodes|get_all_node_names)|length == 0

    - name: Validate for identical services
      assert:
        that:
          # Uses a custom filter to create a list of unique services, comparing the length of both.
          - VPNV4|length == VPNV4|count_unique_entries_in_list_of_dicts()

