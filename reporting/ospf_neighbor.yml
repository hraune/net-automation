---
- name: Create OSPF neighbor DOT and PNG
  hosts: isp
  connection: local
  gather_facts: no
  vars:
  - temp_path: temp
  - output_path: output
  - template_path: templates
  - textfsm_ospf_neighbor: '../../ntc-templates/templates/cisco_ios_show_ip_ospf_neighbor.template'

  tasks:
  - name: Get OSPF id and neighbors
    ios_command:
      commands:
        - show ip ospf
        - show ip ospf neighbor
    register: result

  - name: Extract ospf neighbor data with textfsm
    set_fact: 
      ospf_id: "{{ result.stdout_lines[0][0].split(' with ID ')[1] }}"
      ospf_neighbor: "{{ result.stdout[1] | parse_cli_textfsm(textfsm_ospf_neighbor) }}"

  - name: Create output directory
    file:
      path: "{{ output_path }}"
      state: directory
    run_once: true
  
  - name: Clean temp directory
    file:
      path: "{{ temp_path }}"
      state: absent
    run_once: true  

  - name: Create temp directory
    file:
      path: "{{ temp_path }}"
      state: directory
    run_once: true

  - name: Clean up old graph files
    file:
      path: "{{ output_path }}/ospf_neighbor.dot"
      state: absent
    run_once: true
    
  - name: Clean up old graph images
    file:
      path: "{{ output_path }}/ospf_neighbor.png"
      state: absent
    run_once: true

  - name: Write all OSPF neighbor data to file
    template:
      src: "{{ template_path }}/ospf_neighbor_data.j2"
      dest: "{{ temp_path }}/ospf_neighbor_{{ ospf_id }}.json"
    run_once: 

  - name: Create graph dot-file
    template:
      src: "{{ template_path }}/ospf_neighbor_graph.j2"
      dest: "{{ output_path }}/ospf_neighbor.dot"
    run_once: true

  - name: Create graph image
    shell: "dot -Tpng {{ output_path }}/ospf_neighbor.dot > {{ output_path }}/ospf_neighbor.png"
    run_once: true

